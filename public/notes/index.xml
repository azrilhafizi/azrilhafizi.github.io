<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Learning Notes on The Outlier</title>
    <link>http://example.org/notes/</link>
    <description>Recent content in Learning Notes on The Outlier</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://example.org/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Guidelines for Mathematical Writing</title>
      <link>http://example.org/notes/proof_guidelines/</link>
      <pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/notes/proof_guidelines/</guid>
      <description>Begin sentences with word, not math symbol.
$A$ is a subset of $B$. ❌
The set $A$ is a subset of $B$. ✔️
$x^2 - x + 2 = 0$ has two solutions. ❌
The equations $x^2 - x + 2 = 0$ has two solutions. ✔️
End each sentence with a period, even when it ends with math symbol or expression.
Euler proved that $\sum_{k=1}^{\infty}\frac{1}{k^{s}}=\prod_{p\in P}\frac{1}{1-\frac{1}{p^{s}}}$ ❌ Euler proved that $\sum_{k=1}^{\infty}\frac{1}{k^{s}}=\prod_{p\in P}\frac{1}{1-\frac{1}{p^{s}}}$.</description>
    </item>
    <item>
      <title>Einsum</title>
      <link>http://example.org/notes/einsum/</link>
      <pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/notes/einsum/</guid>
      <description>signature einsum(equation, operand) where equation is a string representing the Einstein summation and operands is a sequence of tensors.
how its work? free indices: indices specified in output summation indices: all other indices in input not in output example: np.einsum(&amp;quot;ik, kj -&amp;gt; ij&amp;quot;, A, B), free indices = i, j and summation index = k examples import torch
x = torch.rand((2, 3))
permutation torch.einsum(&amp;quot;ij -&amp;gt; ji&amp;quot;, x)
summation torch.einsum(&amp;quot;ij -&amp;gt;&amp;quot;, x)</description>
    </item>
  </channel>
</rss>
